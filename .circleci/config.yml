version: 2.1


build_on_master: &build_on_master
  filters:
    tags:
      only: /^v.*/
    branches:
      only: master

orbs:
  aws-ecr: circleci/aws-ecr@7.0.0

workflows:
  version: 2
  rest-cpu-load-flow:
    jobs:
      - unit_testing_go:
          <<: *build_on_master
      - aws-ecr/build-and-push-image:
          <<: *build_on_master
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id:  AWS_ACCESS_KEY_ID
          aws-secret-access-key:  AWS_SECRET_ACCESS_KEY
          region: AWS_REGION
          dockerfile: Dockerfile
          path: ./
          repo: rest-cpu-load
          tag: 0.1.<< pipeline.number >>

          requires:
            - unit_testing_go
      - preprare_chart_and_deploy:
          <<: *build_on_master
          requires:
            - aws-ecr/build-and-push-image
jobs:
  unit_testing_go:
    working_directory: ~/repo
    docker:
      - image: cimg/go:1.16.5
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go get ./...
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run test
          command: make test
  preprare_chart_and_deploy:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install YQ
          command: |
            sudo wget https://github.com/mikefarah/yq/releases/download/v4.20.1/yq_linux_amd64 -O /usr/bin/yq
            sudo chmod +x /usr/bin/yq
             yq --version
      - run:
          name: Update YML Chart.yml 
          command: |
            ls
            TAG=0.1.<< pipeline.number >>
            TAGHELM="0.1.<< pipeline.number >>"
            sed -i 's|^version:.*|version: '"$TAGHELM"'|g' charts/rest-cpu-load/Chart.yaml
          
            yq -i '.description = "rest-cpu-load-'$TAG'"' charts/rest-cpu-load/Chart.yaml
            yq -i '.appVersion = "'$TAG'"' charts/rest-cpu-load/Chart.yaml  
            yq -i '.name = "rest-cpu-load"' charts/rest-cpu-load/Chart.yaml
      - run:
          name: Update YML values.yml Dev
          command: |
            TAG="0.1.<< pipeline.number >>"
            yq -i '.image.tag = "'$TAG'"' charts/rest-cpu-load/values.yaml
            yq -i '.nameOverride = "rest-cpu-load"' charts/rest-cpu-load/values.yaml
            yq -i '.fullnameOverride = "rest-cpu-load"' charts/rest-cpu-load/values.yaml
   
      - run:
          name: Install Helm
          command: |
            curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
            chmod 700 get_helm.sh
            ./get_helm.sh
            helm version
      - run:
          name: Test Chart lint
          command: |
             cat charts/rest-cpu-load/Chart.yaml
             helm lint charts/rest-cpu-load/
      - run:
          name: Install awscli
          command: |
            sudo pip3 install awscli
      - run:
          name: Install aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator https://s3.us-west-2.amazonaws.com/amazon-eks/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator
      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Prepare K8S login
          command: |
            
            aws eks --region us-west-1 update-kubeconfig --name boletia
            kubectl get pods --all-namespaces


      - run:
          name: Deploying Kubernetes
          command: |
            helm install rest-cpu-load charts/rest-cpu-load/